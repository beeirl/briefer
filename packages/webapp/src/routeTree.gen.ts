/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardingImport } from './routes/_onboarding'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as OnboardingOnboardingImport } from './routes/_onboarding/onboarding'
import { Route as AuthAuthIndexImport } from './routes/_auth/auth/index'
import { Route as DashboardBriefBriefIDImport } from './routes/_dashboard/brief.$briefID'
import { Route as AuthAuthCodeIndexImport } from './routes/_auth/auth/code/index'
import { Route as AuthAuthCodeVerifyImport } from './routes/_auth/auth/code/verify'

// Create/Update Routes

const OnboardingRoute = OnboardingImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const OnboardingOnboardingRoute = OnboardingOnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => OnboardingRoute,
} as any)

const AuthAuthIndexRoute = AuthAuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardBriefBriefIDRoute = DashboardBriefBriefIDImport.update({
  id: '/brief/$briefID',
  path: '/brief/$briefID',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthAuthCodeIndexRoute = AuthAuthCodeIndexImport.update({
  id: '/auth/code/',
  path: '/auth/code/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthCodeVerifyRoute = AuthAuthCodeVerifyImport.update({
  id: '/auth/code/verify',
  path: '/auth/code/verify',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/_onboarding/onboarding': {
      id: '/_onboarding/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingOnboardingImport
      parentRoute: typeof OnboardingImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/brief/$briefID': {
      id: '/_dashboard/brief/$briefID'
      path: '/brief/$briefID'
      fullPath: '/brief/$briefID'
      preLoaderRoute: typeof DashboardBriefBriefIDImport
      parentRoute: typeof DashboardImport
    }
    '/_auth/auth/': {
      id: '/_auth/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/code/verify': {
      id: '/_auth/auth/code/verify'
      path: '/auth/code/verify'
      fullPath: '/auth/code/verify'
      preLoaderRoute: typeof AuthAuthCodeVerifyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/code/': {
      id: '/_auth/auth/code/'
      path: '/auth/code'
      fullPath: '/auth/code'
      preLoaderRoute: typeof AuthAuthCodeIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthIndexRoute: typeof AuthAuthIndexRoute
  AuthAuthCodeVerifyRoute: typeof AuthAuthCodeVerifyRoute
  AuthAuthCodeIndexRoute: typeof AuthAuthCodeIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthIndexRoute: AuthAuthIndexRoute,
  AuthAuthCodeVerifyRoute: AuthAuthCodeVerifyRoute,
  AuthAuthCodeIndexRoute: AuthAuthCodeIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardBriefBriefIDRoute: typeof DashboardBriefBriefIDRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardBriefBriefIDRoute: DashboardBriefBriefIDRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface OnboardingRouteChildren {
  OnboardingOnboardingRoute: typeof OnboardingOnboardingRoute
}

const OnboardingRouteChildren: OnboardingRouteChildren = {
  OnboardingOnboardingRoute: OnboardingOnboardingRoute,
}

const OnboardingRouteWithChildren = OnboardingRoute._addFileChildren(
  OnboardingRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof OnboardingRouteWithChildren
  '/onboarding': typeof OnboardingOnboardingRoute
  '/': typeof DashboardIndexRoute
  '/brief/$briefID': typeof DashboardBriefBriefIDRoute
  '/auth': typeof AuthAuthIndexRoute
  '/auth/code/verify': typeof AuthAuthCodeVerifyRoute
  '/auth/code': typeof AuthAuthCodeIndexRoute
}

export interface FileRoutesByTo {
  '': typeof OnboardingRouteWithChildren
  '/onboarding': typeof OnboardingOnboardingRoute
  '/': typeof DashboardIndexRoute
  '/brief/$briefID': typeof DashboardBriefBriefIDRoute
  '/auth': typeof AuthAuthIndexRoute
  '/auth/code/verify': typeof AuthAuthCodeVerifyRoute
  '/auth/code': typeof AuthAuthCodeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_onboarding': typeof OnboardingRouteWithChildren
  '/_onboarding/onboarding': typeof OnboardingOnboardingRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/brief/$briefID': typeof DashboardBriefBriefIDRoute
  '/_auth/auth/': typeof AuthAuthIndexRoute
  '/_auth/auth/code/verify': typeof AuthAuthCodeVerifyRoute
  '/_auth/auth/code/': typeof AuthAuthCodeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/onboarding'
    | '/'
    | '/brief/$briefID'
    | '/auth'
    | '/auth/code/verify'
    | '/auth/code'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/onboarding'
    | '/'
    | '/brief/$briefID'
    | '/auth'
    | '/auth/code/verify'
    | '/auth/code'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard'
    | '/_onboarding'
    | '/_onboarding/onboarding'
    | '/_dashboard/'
    | '/_dashboard/brief/$briefID'
    | '/_auth/auth/'
    | '/_auth/auth/code/verify'
    | '/_auth/auth/code/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  OnboardingRoute: typeof OnboardingRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  OnboardingRoute: OnboardingRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_dashboard",
        "/_onboarding"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth/",
        "/_auth/auth/code/verify",
        "/_auth/auth/code/"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/",
        "/_dashboard/brief/$briefID"
      ]
    },
    "/_onboarding": {
      "filePath": "_onboarding.tsx",
      "children": [
        "/_onboarding/onboarding"
      ]
    },
    "/_onboarding/onboarding": {
      "filePath": "_onboarding/onboarding.tsx",
      "parent": "/_onboarding"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/brief/$briefID": {
      "filePath": "_dashboard/brief.$briefID.tsx",
      "parent": "/_dashboard"
    },
    "/_auth/auth/": {
      "filePath": "_auth/auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/code/verify": {
      "filePath": "_auth/auth/code/verify.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/code/": {
      "filePath": "_auth/auth/code/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
